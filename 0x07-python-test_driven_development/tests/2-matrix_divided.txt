"""
This is a test of the Matrix devide function

>>> with open("2-matrix_divided.py", "r") as f:
...     code = f.read()
>>> exec(code)   
>>> matrix1 = [[3]]
>>> print(matrix_divided(matrix1, 3))
[[1.0]]
>>> matrix2 = [[3, 9], [12, 15]]
>>> print(matrix_divided(matrix2, -3))
[[-1.0, -3.0], [-4.0, -5.0]]
>>> print(matrix_divided(matrix2, 0))
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> print(matrix_divided(matrix2, 3))
[[1.0, 3.0], [4.0, 5.0]]
>>> matrix3 = [[3, '9'], [15, 3]]
>>> print(matrix_divided(matrix3, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided(matrix2, float('nan')))
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix4 = [[3, 9], [float('nan')]]
>>> print(matrix_divided(matrix4, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided(matrix2, float('inf')))
[[0.0, 0.0], [0.0, 0.0]]
>>> print(matrix_divided(matrix4, float('nan')))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix5 = [[3, 9], [12, 15, 3]]
>>> print(matrix_divided(matrix5, 3))
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

"""
