"""
This is a test of the Matrix devide function

>>> with open("7-base_geometry.py", "r") as f:
...     code = f.read()
>>> exec(code) 
>>> bg = BaseGeometry()
>>> isinstance(bg, BaseGeometry)
True
>>> hasattr(bg, "area")
True
>>> hasattr(bg, "integer_validator")
True
>>> bg.integer_validator("age")
Traceback (most recent call last):
    ...
TypeError: TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0
>>> bg.integer_validator("age", -4)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0
>>> bg.integer_validator("age", 13.5)
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", 1)
>>> bg.integer_validator("age", "4")
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", {3,4})
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

"""
